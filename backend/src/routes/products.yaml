paths:
  /products:
    get:
      tags:
        - Products
      summary: Get all products.
      operationId: getAllProducts
      responses:
        '200':
          description: Products found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Products
      summary: Add new product.
      operationId: addNewProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: New product created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /products/{productId}:
    patch:
      tags:
        - Products
      summary: Edit product with ID.
      operationId: editProduct
      parameters:
        - in: path
          name: productId
          description: ID of the product to edit.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Product not found.
          content:
            text/plain:
              schema:
                type: string
                example: Product with ID {productId} was not found.
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Products
      summary: Remove a product by ID.
      operationId: removeExistingProduct
      parameters:
        - in: path
          name: productId
          description: ID of the product to remove.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product removed successfully.
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Product not found.
          content:
            text/plain:
              schema:
                type: string
                example: Product with ID {productId} was not found.
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  responses:
    BadRequest:
      description: Bad request.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    InternalServerError:
      description: Internal server error.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  schemas:
    Product:
      type: object
      required:
        - productName
        - productOwnerName
        - developers
        - scrumMasterName
        - startDate
        - methodology
      properties:
        productId:
          type: integer
          description: The product identifier, generated by the server.
          example: 1
        productOwnerName:
          type: string
          description: The person responsible for leading the product.
          example: Erica Johnson
        developers:
          type: array
          items:
            type: string
          description: The people developing the product.
          example: ['Sarah Johnson', 'Avery Baker']
        scrumMasterName:
          type: string
          description: The person who facilitates the scrum process for the product.
          example: Mia Hernandez
        startDate:
          type: string
          description: When the product started planning and development.
          example: 2019/06/10
        methodology:
          type: string
          description: A set of principles and practices (Agile or Waterfall).
          example: Agile
